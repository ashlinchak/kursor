
= form_for(user, :url => ( user.new_record? ? admin_users_path : admin_user_path(user) ), :multipart => true, :html => { :class => 'form-horizontal' } ) do |f|
  = render :partial => 'shared/form_errors', :locals => { :object => user }
  %fieldset
    %legend User info
    .control-group
      = f.label :email, :class => 'control-label'
      .controls
        = f.text_field :email, :class => 'input-xlarge'
    .control-group
      = f.label :password, :class => 'control-label'
      .controls
        = f.password_field :password, :class => 'input-xlarge'
    .control-group
      = f.label :password_confirmation, :class => 'control-label'
      .controls
        = f.password_field :password_confirmation, :class => 'input-xlarge'
        %input{ :name => 'current_user', :value => "#{current_user.email.split('@')[0]}", :type => :hidden }
        = button_tag t(:'admin.users.generate_credentials'), :type => :button, :class => 'btn default-credentials btn-success btn-large'
    - if user.new_record?
      %legend Account type
      .control-group
        -#= f.label :account_type
        .controls
          - User::ACCOUNT_TYPES.each do |account_type|
            %label.radio
              = f.radio_button :account_type_id, User::ACCOUNT_TYPES.index(account_type), :checked => ( true if account_type == 'school' ), :disabled => ('disabled' unless account_type == 'school')
              = t("activerecord.attributes.user.account_types.#{account_type}")
              = account_type
  = f.fields_for :provider do |p|
    .control-group
      = p.label t(:'admin.users.headers.is_approved'), :class => 'control-label'
      .controls
        = p.check_box :is_approved, :checked => true
    = render :partial => '/providers/provider_fields', :locals => { :f => p, :provider => user.provider }
  .form-actions
    = f.submit :class => 'btn btn-large btn-primary'