= form_for(user, :url => ( user.new_record? ? admin_users_path : admin_user_path(user) ), :multipart => true, :html => { :class => 'form-stacked' } ) do |f|
  .row
    = render :partial => 'shared/form_errors', :locals => { :object => user }
    %fieldset
      .field
        = f.label :email
        = f.text_field :email, :size => '45'
      .field
        = f.label :password
        = f.password_field :password, :size => '45'
      .field
        = f.label :password_confirmation
        = f.password_field :password_confirmation, :size => '45'
        %input{ :name => 'current_user', :value => "#{current_user.email.split('@')[0]}", :type => :hidden }
        = button_tag t(:'admin.users.generate_credentials'), :type => :button, :class => 'btn default-credentials'
      - if user.new_record?
        -#.row
        .clearfix
          = f.label :account_type
          .input
            %ul.inputs-list
              - User::ACCOUNT_TYPES.each do |account_type|
                %li
                  %label
                    = f.radio_button :account_type_id, User::ACCOUNT_TYPES.index(account_type)
                    %span= t("activerecord.attributes.user.account_types.#{account_type}")
    = f.fields_for :provider do |p|
      .fields
        = p.label :is_approved
        = p.check_box :is_approved
      = render :partial => '/providers/provider_fields', :locals => { :f => p, :provider => user.provider }
  .actions
    = f.submit :class => 'btn primary'
